{
	"info": {
		"_postman_id": "863807ab-6cab-44f2-af6c-8a3f48903b12",
		"name": "FindYourService",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "authenticate",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fa259ace-bdcd-471a-b3ce-4d4237b7a515",
								"exec": [
									"pm.environment.set(\"authToken\", JSON.parse(responseBody).token);",
									"pm.test(\"response is ok\", function () {",
									"   pm.response.to.have.status(200);",
									"   pm.response.to.have.jsonBody(\"token\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"me@agurodriguez.net\",\n\t\"password\": \"password1\"\n}"
						},
						"url": {
							"raw": "{{apiUrl}}/auth",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"auth"
							]
						},
						"description": "Authenticate a user and return the token if the provided credentials are correct."
					},
					"response": []
				}
			]
		},
		{
			"name": "Service",
			"item": [
				{
					"name": "index",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fb7fa8eb-e337-4f28-b11c-12947c5beb36",
								"exec": [
									"pm.test(\"response is ok\", function () {",
									"   pm.response.to.have.status(200);",
									"   pm.response.to.be.json;",
									"   pm.expect(JSON.parse(responseBody)).to.be.an('array').to.not.be.empty;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Auth-Token",
								"value": "{{authToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/services",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"services"
							]
						},
						"description": "List all services. If parameters are provided then the services are filtered.\n    \nAvailable filters:\n    \nname | type | description\n-----|------|------------\n`$title` | string | Substring of service's title\n`$distance` | number | Distance to service from `$distance_to`\n`$distance_to` | string | String representing a coordinate in the format `$latitude,$longitude` from which the distance is calculated"
					},
					"response": []
				},
				{
					"name": "index - distance",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ffd4245a-7bbb-4deb-9478-9150bf1dcd70",
								"exec": [
									"var responseJson = JSON.parse(responseBody);",
									"pm.test(\"response is ok\", function () {",
									"   pm.response.to.have.status(200);",
									"   pm.response.to.be.json;",
									"   pm.expect(responseJson).to.be.an('array').not.to.be.empty;",
									"   pm.expect(responseJson[0]).to.deep.have.property('distance');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Auth-Token",
								"type": "text",
								"value": "{{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/services?distance=10000&distance_to=40.6987576,-74.1036266",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"services"
							],
							"query": [
								{
									"key": "distance",
									"value": "10000"
								},
								{
									"key": "distance_to",
									"value": "40.6987576,-74.1036266"
								}
							]
						},
						"description": "List all services. If parameters are provided then the services are filtered.\n    \nAvailable filters:\n    \nname | type | description\n-----|------|------------\n`$title` | string | Substring of service's title\n`$distance` | number | Distance to service from `$distance_to`\n`$distance_to` | string | String representing a coordinate in the format `$latitude,$longitude` from which the distance is calculated"
					},
					"response": []
				},
				{
					"name": "show",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "57dffd0d-f894-4d36-a8a3-d79fa87647e7",
								"exec": [
									"pm.test(\"response is ok\", function () {",
									"   pm.response.to.have.status(200);",
									"   pm.response.to.be.json;",
									"   pm.expect(JSON.parse(responseBody)).to.have.deep.property('id');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Auth-Token",
								"value": "{{authToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/services/10",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"services",
								"10"
							]
						},
						"description": "Show the service with id `$id`."
					},
					"response": []
				},
				{
					"name": "show - inexistent",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "57dffd0d-f894-4d36-a8a3-d79fa87647e7",
								"exec": [
									"pm.test(\"response is not found\", function () {",
									"   pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Auth-Token",
								"type": "text",
								"value": "{{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/services/10000",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"services",
								"10000"
							]
						},
						"description": "Show the service with id `$id`."
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "679dee8d-a7ac-472f-b440-90b4350fc91d",
								"exec": [
									"var responseJson = JSON.parse(responseBody);",
									"pm.environment.set(\"lastCreatedId\", responseJson[responseJson.length - 1].id);",
									"pm.test(\"response is ok\", function () {",
									"   pm.response.to.have.status(200);",
									"   pm.response.to.be.json;",
									"   pm.expect(responseJson).to.be.an('array').to.not.be.empty;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "X-Auth-Token",
								"value": "{{authToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\": \"Test Service\",\n\t\"description\": \"Service created in order to test the FYS platform\",\n\t\"address\": \"2255 rue de l'Université\",\n\t\"city\": \"Québec\",\n\t\"state\": \"Quebec\",\n\t\"zip_code\": 10000,\n\t\"location_lat\": 46.78060,\n\t\"location_lon\": -71.26684\n}"
						},
						"url": {
							"raw": "{{apiUrl}}/services",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"services"
							]
						},
						"description": "Create a new service and return the full list of services."
					},
					"response": []
				},
				{
					"name": "create - no title",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "679dee8d-a7ac-472f-b440-90b4350fc91d",
								"exec": [
									"pm.test(\"response is err\", function () {",
									"   pm.response.to.have.status(400);",
									"   pm.response.to.be.json;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Auth-Token",
								"type": "text",
								"value": "{{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"description\": \"Service created in order to test the FYS platform\",\n\t\"address\": \"2255 rue de l'Université\",\n\t\"city\": \"Québec\",\n\t\"state\": \"Quebec\",\n\t\"zip_code\": 10000,\n\t\"location_lat\": 46.78060,\n\t\"location_lon\": -71.26684\n}"
						},
						"url": {
							"raw": "{{apiUrl}}/services",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"services"
							]
						},
						"description": "Create a new service and return the full list of services."
					},
					"response": []
				},
				{
					"name": "create - no description",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "679dee8d-a7ac-472f-b440-90b4350fc91d",
								"exec": [
									"pm.test(\"response is err\", function () {",
									"   pm.response.to.have.status(400);",
									"   pm.response.to.be.json;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Auth-Token",
								"type": "text",
								"value": "{{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\": \"Test Service\",\n\t\"address\": \"2255 rue de l'Université\",\n\t\"city\": \"Québec\",\n\t\"state\": \"Quebec\",\n\t\"zip_code\": 10000,\n\t\"location_lat\": 46.78060,\n\t\"location_lon\": -71.26684\n}"
						},
						"url": {
							"raw": "{{apiUrl}}/services",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"services"
							]
						},
						"description": "Create a new service and return the full list of services."
					},
					"response": []
				},
				{
					"name": "create - no address",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "679dee8d-a7ac-472f-b440-90b4350fc91d",
								"exec": [
									"pm.test(\"response is err\", function () {",
									"   pm.response.to.have.status(400);",
									"   pm.response.to.be.json;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Auth-Token",
								"type": "text",
								"value": "{{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\": \"Test Service\",\n\t\"description\": \"Service created in order to test the FYS platform\",\n\t\"city\": \"Québec\",\n\t\"state\": \"Quebec\",\n\t\"zip_code\": 10000,\n\t\"location_lat\": 46.78060,\n\t\"location_lon\": -71.26684\n}"
						},
						"url": {
							"raw": "{{apiUrl}}/services",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"services"
							]
						},
						"description": "Create a new service and return the full list of services."
					},
					"response": []
				},
				{
					"name": "create - no city",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "679dee8d-a7ac-472f-b440-90b4350fc91d",
								"exec": [
									"pm.test(\"response is err\", function () {",
									"   pm.response.to.have.status(400);",
									"   pm.response.to.be.json;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Auth-Token",
								"type": "text",
								"value": "{{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\": \"Test Service\",\n\t\"description\": \"Service created in order to test the FYS platform\",\n\t\"address\": \"2255 rue de l'Université\",\n\t\"state\": \"Quebec\",\n\t\"zip_code\": 10000,\n\t\"location_lat\": 46.78060,\n\t\"location_lon\": -71.26684\n}"
						},
						"url": {
							"raw": "{{apiUrl}}/services",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"services"
							]
						},
						"description": "Create a new service and return the full list of services."
					},
					"response": []
				},
				{
					"name": "create - no state",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "679dee8d-a7ac-472f-b440-90b4350fc91d",
								"exec": [
									"pm.test(\"response is err\", function () {",
									"   pm.response.to.have.status(400);",
									"   pm.response.to.be.json;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Auth-Token",
								"type": "text",
								"value": "{{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\": \"Test Service\",\n\t\"description\": \"Service created in order to test the FYS platform\",\n\t\"address\": \"2255 rue de l'Université\",\n\t\"city\": \"Québec\",\n\t\"zip_code\": 10000,\n\t\"location_lat\": 46.78060,\n\t\"location_lon\": -71.26684\n}"
						},
						"url": {
							"raw": "{{apiUrl}}/services",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"services"
							]
						},
						"description": "Create a new service and return the full list of services."
					},
					"response": []
				},
				{
					"name": "create - no zip_code",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "679dee8d-a7ac-472f-b440-90b4350fc91d",
								"exec": [
									"pm.test(\"response is err\", function () {",
									"   pm.response.to.have.status(400);",
									"   pm.response.to.be.json;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Auth-Token",
								"type": "text",
								"value": "{{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\": \"Test Service\",\n\t\"description\": \"Service created in order to test the FYS platform\",\n\t\"address\": \"2255 rue de l'Université\",\n\t\"city\": \"Québec\",\n\t\"state\": \"Quebec\",\n\t\"location_lat\": 46.78060,\n\t\"location_lon\": -71.26684\n}"
						},
						"url": {
							"raw": "{{apiUrl}}/services",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"services"
							]
						},
						"description": "Create a new service and return the full list of services."
					},
					"response": []
				},
				{
					"name": "create - no latitude",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "679dee8d-a7ac-472f-b440-90b4350fc91d",
								"exec": [
									"pm.test(\"response is err\", function () {",
									"   pm.response.to.have.status(400);",
									"   pm.response.to.be.json;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Auth-Token",
								"type": "text",
								"value": "{{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\": \"Test Service\",\n\t\"description\": \"Service created in order to test the FYS platform\",\n\t\"address\": \"2255 rue de l'Université\",\n\t\"city\": \"Québec\",\n\t\"state\": \"Quebec\",\n\t\"zip_code\": 10000,\n\t\"location_lon\": -71.26684\n}"
						},
						"url": {
							"raw": "{{apiUrl}}/services",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"services"
							]
						},
						"description": "Create a new service and return the full list of services."
					},
					"response": []
				},
				{
					"name": "create - no longitude",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "679dee8d-a7ac-472f-b440-90b4350fc91d",
								"exec": [
									"pm.test(\"response is err\", function () {",
									"   pm.response.to.have.status(400);",
									"   pm.response.to.be.json;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Auth-Token",
								"type": "text",
								"value": "{{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\": \"Test Service\",\n\t\"description\": \"Service created in order to test the FYS platform\",\n\t\"address\": \"2255 rue de l'Université\",\n\t\"city\": \"Québec\",\n\t\"state\": \"Quebec\",\n\t\"zip_code\": 10000,\n\t\"location_lat\": 46.78060,\n\t\"location_lon\": -71.26684\n}"
						},
						"url": {
							"raw": "{{apiUrl}}/services",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"services"
							]
						},
						"description": "Create a new service and return the full list of services."
					},
					"response": []
				},
				{
					"name": "create - invalid latitude",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "679dee8d-a7ac-472f-b440-90b4350fc91d",
								"exec": [
									"pm.test(\"response is err\", function () {",
									"   pm.response.to.have.status(400);",
									"   pm.response.to.be.json;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Auth-Token",
								"type": "text",
								"value": "{{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\": \"Test Service\",\n\t\"description\": \"Service created in order to test the FYS platform\",\n\t\"address\": \"2255 rue de l'Université\",\n\t\"city\": \"Québec\",\n\t\"state\": \"Quebec\",\n\t\"zip_code\": 10000,\n\t\"location_lat\": \"invalid\",\n\t\"location_lon\": -71.26684\n}"
						},
						"url": {
							"raw": "{{apiUrl}}/services",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"services"
							]
						},
						"description": "Create a new service and return the full list of services."
					},
					"response": []
				},
				{
					"name": "create - invalid longitude",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "679dee8d-a7ac-472f-b440-90b4350fc91d",
								"exec": [
									"pm.test(\"response is err\", function () {",
									"   pm.response.to.have.status(400);",
									"   pm.response.to.be.json;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Auth-Token",
								"type": "text",
								"value": "{{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\": \"Test Service\",\n\t\"description\": \"Service created in order to test the FYS platform\",\n\t\"address\": \"2255 rue de l'Université\",\n\t\"city\": \"Québec\",\n\t\"state\": \"Quebec\",\n\t\"zip_code\": 10000,\n\t\"location_lat\": 46.78060,\n\t\"location_lon\": \"invalid\"\n}"
						},
						"url": {
							"raw": "{{apiUrl}}/services",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"services"
							]
						},
						"description": "Create a new service and return the full list of services."
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "02b5070f-851a-4add-94f2-b368068119e4",
								"exec": [
									"var responseJson = JSON.parse(responseBody);",
									"pm.test(\"response is ok\", function () {",
									"   pm.response.to.have.status(200);",
									"   pm.response.to.be.json;",
									"   pm.expect(responseJson).to.be.an('array').to.not.be.empty;",
									"   pm.expect(responseJson[responseJson.length - 1]).to.have.property('location_lat', '46.78065');",
									"   pm.expect(responseJson[responseJson.length - 1]).to.have.property('location_lon', '-71.26684');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "X-Auth-Token",
								"value": "{{authToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"location_lat\": 46.78065,\n\t\"location_lon\": -71.26684\n}"
						},
						"url": {
							"raw": "{{apiUrl}}/services/{{lastCreatedId}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"services",
								"{{lastCreatedId}}"
							]
						},
						"description": "Update the service with id `$id` and return the full list of services."
					},
					"response": []
				},
				{
					"name": "update - inexistent",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "02b5070f-851a-4add-94f2-b368068119e4",
								"exec": [
									"pm.test(\"response is not found\", function () {",
									"   pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Auth-Token",
								"type": "text",
								"value": "{{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"location_lat\": 46.78065,\n\t\"location_lon\": -71.26684\n}"
						},
						"url": {
							"raw": "{{apiUrl}}/services/100000",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"services",
								"100000"
							]
						},
						"description": "Update the service with id `$id` and return the full list of services."
					},
					"response": []
				},
				{
					"name": "update - invalid latitude",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "02b5070f-851a-4add-94f2-b368068119e4",
								"exec": [
									"pm.test(\"response is err\", function () {",
									"   pm.response.to.have.status(400);",
									"   pm.response.to.be.json;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Auth-Token",
								"type": "text",
								"value": "{{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"location_lat\": \"invalid\",\n\t\"location_lon\": -71.26684\n}"
						},
						"url": {
							"raw": "{{apiUrl}}/services/{{lastCreatedId}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"services",
								"{{lastCreatedId}}"
							]
						},
						"description": "Update the service with id `$id` and return the full list of services."
					},
					"response": []
				},
				{
					"name": "update - invalid longitude",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "02b5070f-851a-4add-94f2-b368068119e4",
								"exec": [
									"pm.test(\"response is err\", function () {",
									"   pm.response.to.have.status(400);",
									"   pm.response.to.be.json;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Auth-Token",
								"type": "text",
								"value": "{{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"location_lat\": 46.78065,\n\t\"location_lon\": \"invalid\"\n}"
						},
						"url": {
							"raw": "{{apiUrl}}/services/{{lastCreatedId}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"services",
								"{{lastCreatedId}}"
							]
						},
						"description": "Update the service with id `$id` and return the full list of services."
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2eee93e0-0b56-4fd0-bafe-4d93737048c0",
								"exec": [
									"var responseJson = JSON.parse(responseBody);",
									"pm.test(\"response is ok\", function () {",
									"   pm.response.to.have.status(200);",
									"   pm.response.to.be.json;",
									"   pm.expect(responseJson).to.be.an('array');",
									"   pm.expect(responseJson).to.not.deep.include({ id: pm.environment.get(\"lastCreatedId\") });",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-Auth-Token",
								"value": "{{authToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/services/{{lastCreatedId}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"services",
								"{{lastCreatedId}}"
							]
						},
						"description": "Delete the service with id `$id` and return the full list of services."
					},
					"response": []
				},
				{
					"name": "delete - inexistent",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2eee93e0-0b56-4fd0-bafe-4d93737048c0",
								"exec": [
									"pm.test(\"response is not found\", function () {",
									"   pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-Auth-Token",
								"type": "text",
								"value": "{{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/services/100000",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"services",
								"100000"
							]
						},
						"description": "Delete the service with id `$id` and return the full list of services."
					},
					"response": []
				}
			]
		}
	]
}